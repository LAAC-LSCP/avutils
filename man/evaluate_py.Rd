% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/evaluate_py.R
\name{evaluate_py}
\alias{evaluate_py}
\title{run evaluation via python scripts}
\usage{
evaluate_py(test, reference, metric = "accuracy", task = "detection",
  prefix = NULL, check_python = FALSE, set_ident_flag = FALSE,
  processed_output = TRUE, progressbar = FALSE)
}
\arguments{
\item{test}{character, path to test file (must be .rttm), typically with prefix}

\item{reference}{character, path to reference file (must be .rttm), typically without prefix}

\item{metric}{character, the metric to be calculated}

\item{task}{character, the task}

\item{prefix}{character, the file prefix for the \code{test} file (the default option \code{NULL} tries to guess it from the file name)}

\item{check_python}{logical, test whether python is working}

\item{set_ident_flag}{logical, should the '--identification' flag be set for the call to the python script}

\item{processed_output}{logical, should the process output be returned (a data.frame) or the raw textual output from the console (a list). Default is \code{TRUE}.}

\item{progressbar}{logical, display a progress bar (default is \code{FALSE})}
}
\value{
a data.frame with one row per pair of test/reference and a varying number of columns (depending on task and metric).
}
\description{
run evaluation via python scripts
}
\details{
So far the function only works for a small subset of evaluation task/metric combinations:
\itemize{
 \item{detection/accuracy}
 \item{detection/precision}
 \item{detection/recall}
 \item{identification/ider}
 \item{identification/precision}
 \item{identification/recall}
 \item{diarization/diaer}
}

Pairs of test/reference are determined by the \code{\link{rttm_pairs}} function.

Also, the function is not very efficient because it has to initialize python for each test/reference pair.
}
\examples{
\dontrun{
dataloc <- dirname(system.file("spanish.rttm", package = "avutils"))
# list three reference files, one containing a 'typo'
reference <- file.path(dataloc, c("BER_0485_12_07_09123.rttm", "spanish.rttm", "filewithtypo.rttm"))
# and a whole bunch of potential test files (all rttm in the same location)
test <- list.files(dataloc, pattern= ".rttm$", full.names = TRUE)

# will produce a warning that there was one file that couldn't be processed...
res <- evaluate_py(test = test, reference = reference, metric = "accuracy", task = "detection",
                   progressbar = TRUE)
res
}

}
